
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Seller {
    private String name;
    private String itemName;
    private double itemPrice;

    public Seller(String name, String itemName, double itemPrice) {
        this.name = name;
        this.itemName = itemName;
        this.itemPrice = itemPrice;
    }

    public String getName() {
        return name;
    }

    public String getItemName() {
        return itemName;
    }

    public double getItemPrice() {
        return itemPrice;
    }
}

class Bidder {
    private String name;
    private double bidAmount;

    public Bidder(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public double getBidAmount() {
        return bidAmount;
    }

    public void placeBid(double bidAmount) {
        this.bidAmount = bidAmount;
    }
}

public class AuctionSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Seller> sellers = new ArrayList<>();
        List<Bidder> bidders = new ArrayList<>();

        System.out.println("Welcome to the Auction System!");

        System.out.print("Enter admin name: ");
        String adminName = scanner.nextLine();
        System.out.println("----------------------------------");
        System.out.println("----------------------------------");
        
        System.out.println("Auction started by admin: " + adminName);

        System.out.print("Enter the number of sellers: ");
        int numSellers = scanner.nextInt();
        scanner.nextLine();

        for (int i = 0; i < numSellers; i++) {
            System.out.print("Enter the name of seller " + (i + 1) + ": ");
            String sellerName = scanner.nextLine();
            System.out.print("Enter the item name: ");
            String itemName = scanner.nextLine();
            System.out.print("Enter the price of the item: ");
            double itemPrice = scanner.nextDouble();
            scanner.nextLine();

            Seller seller = new Seller(sellerName, itemName, itemPrice);
            sellers.add(seller);
        }
        System.out.println("----------------------------------");
        System.out.print("Enter the number of bidders: ");
        int numBidders = scanner.nextInt();
        scanner.nextLine();

        for (int i = 0; i < numBidders; i++) {
            System.out.print("Enter the name of bidder " + (i + 1) + ": ");
            String bidderName = scanner.nextLine();

            Bidder bidder = new Bidder(bidderName);
            bidders.add(bidder);
        }
        System.out.println("----------------------------------");
        System.out.println("----------------------------------");
        // Auction starts
        System.out.println("Auction has started!");

        while (true) {
            System.out.print("Enter the name of the bidder who wants to bid (or 'exit' to end the auction): ");
            String bidderName = scanner.nextLine();

            if (bidderName.equalsIgnoreCase("exit")) {
                break;
            }

            Bidder bidder = findBidder(bidders, bidderName);

            if (bidder != null) {
                System.out.print("Enter the bid amount: ");
                double bidAmount = scanner.nextDouble();
                scanner.nextLine();

                bidder.placeBid(bidAmount);
            } else {
                System.out.println("Invalid bidder name!");
                System.out.println("----------------------------------");
            }
        }

        Bidder winner = findWinner(bidders);

        if (winner != null) {
            System.out.println("----------------------------------");
            System.out.println("----------------------------------");
            System.out.println("The auction is over!");
            System.out.println("The winner is: " + winner.getName() + " with a bid of $" + winner.getBidAmount());
        } else {
            System.out.println("No winner found!");
        }
        
        for (Seller seller : sellers) {
            System.out.println("Seller: " + seller.getName());
            System.out.println("Item: " + seller.getItemName());
            System.out.println("Price: " + seller.getItemPrice());
            System.out.println();
        }
        
        System.out.println("Bids:");
        for (Bidder bidder : bidders) {
            System.out.println("Bidder: " + bidder.getName());
            System.out.println("Bid: " + bidder.getBidAmount());
            System.out.println();
        }
    }

    private static Bidder findBidder(List<Bidder> bidders, String name) {
        for (Bidder bidder : bidders) {
            if (bidder.getName().equalsIgnoreCase(name)) {
                return bidder;
            }
        }
        return null;
    }

    private static Bidder findWinner(List<Bidder> bidders) {
        Bidder winner = null;
        double highestBid = 0;

        for (Bidder bidder : bidders) {
            if (bidder.getBidAmount() > highestBid) {
                highestBid = bidder.getBidAmount();
                winner = bidder;
            }
        }

        return winner;
    }
}



